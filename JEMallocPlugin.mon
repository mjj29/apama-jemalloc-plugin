/**
 * Title:        JEMallocPlugin.mon
 * Description:  JEMalloc EPL Helper
 * Copyright (c) 2020 Software AG, Darmstadt, Germany andor its licensors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the License at
 * http:/www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 */

package com.apamax;

event JEMalloc
{
	import "JEMallocPlugin" as plugin;
	static action flushCurrentThreadCache()
	{
		plugin.mallctl("thread.tcache.flush");
	}
	static action getThreadAllocated() returns integer
	{
		return plugin.mallctl_getint("thread.allocated");
	}
	static action getThreadDeallocated() returns integer
	{
		return plugin.mallctl_getint("thread.deallocated");
	}
	// 0 is all
	static action purgeArena(integer arenaNum)
	{
		plugin.mallctl("arena.<"+arenaNum.toString()+">.purge");
	}
	static action getNumArenas() returns integer
	{
		return plugin.mallctl_getunsigned("arena.narenas");
	}
	static action getArenaActivePages(integer arenaNum) returns integer
	{
		return plugin.mallctl_getsize("stats.arenas.<"+arenaNum.toString()+">.pactive");
	}
	static action getArenaDirtyPages(integer arenaNum) returns integer
	{
		return plugin.mallctl_getsize("stats.arenas.<"+arenaNum.toString()+">.pdirty");
	}
}
